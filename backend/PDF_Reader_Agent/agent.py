from google.adk.agents import Agent
from google.adk.tools.agent_tool import AgentTool
import json
import os

def merge_json_data(new_json_str: str) -> str:
    """
    Merge existing events.json with new JSON string (generated by agent).
    Save the merged result back to events.json and return it as a string.
    """
    # Path to events.json (one level up from this fileâ€™s directory)
    events_path = os.path.join(os.path.dirname(__file__), '..', 'events.json')
    events_path = os.path.abspath(events_path)

    try:
        # Load existing JSON if file exists, else start empty list
        if os.path.exists(events_path):
            with open(events_path, 'r') as f:
                existing_data = json.load(f)
        else:
            existing_data = []

        # Parse the new JSON string from agent
        new_data = json.loads(new_json_str)

        # Merge them (assuming both are lists of dicts)
        merged_data = existing_data + new_data

        # Save back to events.json
        with open(events_path, 'w') as f:
            json.dump(merged_data, f, indent=4)

        return json.dumps(merged_data, indent=4)
    except Exception as e:
        return str(e)
def delete_file(file_path: str) -> str:
    """
    Delete a file at the given file path and return a confirmation message.
    """
    import os

    try:
        if os.path.exists(file_path):
            os.remove(file_path)
            return f"File {file_path} deleted successfully."
        else:
            return f"File {file_path} does not exist."
    except Exception as e:
        return f"Error deleting file: {str(e)}"

def extract_text_from_pdf(file_path: str) -> str:
    """
    Extract text from a PDF file and return it as a string taking file_path as a parameter"""
    from PyPDF2 import PdfReader

    reader = PdfReader(file_path)
    text = ""
    for page in reader.pages:
        text += page.extract_text() + "\n"
    return text

root_agent = Agent(
    name="PDF_Reader_Agent",
    model="gemini-2.5-pro",
    description="Agent that can read and extract information from PDF documents",
    instruction="""
    You are a PDF Reader Agent that extracts text from PDF documents of syllabus to find homework,class, and exam dates and descriptions.
    Submit it all as a single string in the 'body' field of the response.
    Your Output MUST be valid JSON matching this structure:
    [
        {
            "date": "day it is assigned and if it goes by week assume it is due friday of every week( fall semsters start august 16, spring january 8, and summer may 10)",
            "title": "Exam, class, or assignment title",
            "description": "Describe the event here",
            "time": "11:59 PM if an assignment", if exam or class whenevr it is scheduled,
            "importance": "low if minor assignment, medium if major assignment and class, high if exam",
            "stress": "3 if minor assignment, 5 if class, 7 if major assignment, 10 if exam"
       },{another event here},{another until eveent is processed}
    ]
    1.  Use the tool `extract_text_from_pdf` to extract text from the PDF file.
    2.  Try to use takeout Homework, class, and exam date,times,desciption from the PDF.
    3.  Take those extracted information and format it into given desired output.
    4.  USE the tool `merge_json_data` to merge the extracted JSON with existing events in events.json.
    5.  Use the tool `delete_file` to delete the file after processing.
    """,
    tools=[extract_text_from_pdf, delete_file, merge_json_data],
)